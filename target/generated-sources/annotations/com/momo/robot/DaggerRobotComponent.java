// Generated by Dagger (https://google.github.io/dagger).
package com.momo.robot;

import dagger.internal.Preconditions;

public final class DaggerRobotComponent implements RobotComponent {
  private DaggerRobotComponent(Builder builder) {}

  public static Builder builder() {
    return new Builder();
  }

  public static RobotComponent create() {
    return new Builder().build();
  }

  @Override
  public FullRobot buildRobot() {
    return new FullRobot(new FireArm(), new LaserArm(), new PaperLeg(), new IronLeg());
  }

  public static final class Builder {
    private Builder() {}

    public RobotComponent build() {
      return new DaggerRobotComponent(this);
    }

    /**
     * @deprecated This module is declared, but an instance is not used in the component. This
     *     method is a no-op. For more, see https://google.github.io/dagger/unused-modules.
     */
    @Deprecated
    public Builder leftFireArmRightLaserArmModule(
        LeftFireArmRightLaserArmModule leftFireArmRightLaserArmModule) {
      Preconditions.checkNotNull(leftFireArmRightLaserArmModule);
      return this;
    }

    /**
     * @deprecated This module is declared, but an instance is not used in the component. This
     *     method is a no-op. For more, see https://google.github.io/dagger/unused-modules.
     */
    @Deprecated
    public Builder leftPaperLegRightIronLegModule(
        LeftPaperLegRightIronLegModule leftPaperLegRightIronLegModule) {
      Preconditions.checkNotNull(leftPaperLegRightIronLegModule);
      return this;
    }
  }
}
